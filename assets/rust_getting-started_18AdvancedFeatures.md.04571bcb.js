import{_ as n,c as s,o as a,a as p}from"./app.ac3aae98.js";const d='{"title":"unsafe Rust","description":"","frontmatter":{},"headers":[{"level":2,"title":"unsafe \u7684\u8D85\u80FD\u529B","slug":"unsafe-\u7684\u8D85\u80FD\u529B"},{"level":3,"title":"\u89E3\u5F15\u7528\u88F8\u6307\u9488","slug":"\u89E3\u5F15\u7528\u88F8\u6307\u9488"},{"level":3,"title":"\u8BBF\u95EE\u4E0D\u5B89\u5168\u7684\u51FD\u6570\u6216\u65B9\u6CD5","slug":"\u8BBF\u95EE\u4E0D\u5B89\u5168\u7684\u51FD\u6570\u6216\u65B9\u6CD5"},{"level":3,"title":"\u8BBF\u95EE\u6216\u4FEE\u6539\u53EF\u53D8\u9759\u6001\u53D8\u91CF","slug":"\u8BBF\u95EE\u6216\u4FEE\u6539\u53EF\u53D8\u9759\u6001\u53D8\u91CF"},{"level":3,"title":"\u5B9E\u73B0\u4E0D\u5B89\u5168 Trait","slug":"\u5B9E\u73B0\u4E0D\u5B89\u5168-trait"},{"level":3,"title":"\u8BBF\u95EE union \u7684\u5B57\u6BB5","slug":"\u8BBF\u95EE-union-\u7684\u5B57\u6BB5"},{"level":2,"title":"\u4F55\u65F6\u4F7F\u7528 unsafe code","slug":"\u4F55\u65F6\u4F7F\u7528-unsafe-code"},{"level":2,"title":"\u51FD\u6570\u6307\u9488","slug":"\u51FD\u6570\u6307\u9488"},{"level":2,"title":"\u8FD4\u56DE\u503C\u95ED\u5305","slug":"\u8FD4\u56DE\u503C\u95ED\u5305"}],"relativePath":"rust/getting-started/18AdvancedFeatures.md"}',t={},e=p(`<h1 id="unsafe-rust" tabindex="-1">unsafe Rust</h1><h2 id="unsafe-\u7684\u8D85\u80FD\u529B" tabindex="-1">unsafe \u7684\u8D85\u80FD\u529B</h2><h3 id="\u89E3\u5F15\u7528\u88F8\u6307\u9488" tabindex="-1">\u89E3\u5F15\u7528\u88F8\u6307\u9488</h3><ul><li>\u548C\u5F15\u7528\u4E00\u6837\uFF0C\u88F8\u6307\u9488\u662F\u4E0D\u53EF\u53D8\u6216\u53EF\u53D8\u7684\uFF0C\u5206\u522B\u5199\u4F5C <ul><li><code>*const T</code></li><li><code>*mut T</code></li></ul></li><li>\u88F8\u6307\u9488\u4E0E\u5F15\u7528\u548C\u667A\u80FD\u6307\u9488\u7684\u533A\u522B\u5728\u4E8E <ul><li>\u5141\u8BB8\u5FFD\u7565\u501F\u7528\u89C4\u5219 <ul><li>\u53EF\u4EE5\u540C\u65F6\u62E5\u6709\u4E0D\u53EF\u53D8\u548C\u53EF\u53D8\u7684\u6307\u9488</li><li>\u591A\u4E2A\u6307\u5411\u76F8\u540C\u4F4D\u7F6E\u7684\u53EF\u53D8\u6307\u9488</li></ul></li><li>\u4E0D\u4FDD\u8BC1\u6307\u5411\u6709\u6548\u7684\u5185\u5B58</li><li>\u5141\u8BB8\u4E3A\u7A7A</li><li>\u4E0D\u80FD\u5B9E\u73B0\u4EFB\u4F55\u81EA\u52A8\u6E05\u7406\u529F\u80FD</li></ul></li><li>\u901A\u8FC7\u653E\u5F03\u5B89\u5168\u4FDD\u8BC1\u4EE5\u6362\u53D6\u6027\u80FD\u6216\u4F7F\u7528\u53E6\u4E00\u4E2A\u8BED\u8A00\u6216\u786C\u4EF6\u63A5\u53E3\u7684\u80FD\u529B</li><li>\u5E94\u7528\u573A\u666F <ul><li>\u8C03\u7528 C \u4EE3\u7801\u63A5\u53E3</li><li>\u6784\u5EFA\u501F\u7528\u68C0\u67E5\u5668\u65E0\u6CD5\u7406\u89E3\u7684\u5B89\u5168\u62BD\u8C61(\u6211\u4EEC\u786E\u4FE1\u5B89\u5168\u7684)</li></ul></li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">let</span> <span class="token keyword">mut</span> num <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span>num <span class="token keyword">as</span> <span class="token operator">*</span><span class="token keyword">const</span> <span class="token keyword">i32</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> r2 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> num <span class="token keyword">as</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token keyword">i32</span><span class="token punctuation">;</span>

<span class="token comment">// unsafe block\u5916\u4E0D\u5141\u8BB8\u89E3\u5F15\u7528\u88F8\u6307\u9488</span>
<span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;r1 is: {}&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>r1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;r2 is: {}&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>r2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u8BBF\u95EE\u4E0D\u5B89\u5168\u7684\u51FD\u6570\u6216\u65B9\u6CD5" tabindex="-1">\u8BBF\u95EE\u4E0D\u5B89\u5168\u7684\u51FD\u6570\u6216\u65B9\u6CD5</h3><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">unsafe</span> <span class="token keyword">fn</span> <span class="token function-definition function">dangerous</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
    <span class="token function">dangerous</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="\u521B\u5EFA\u4E0D\u5B89\u5168\u51FD\u6570\u7684\u5B89\u5168\u62BD\u8C61" tabindex="-1">\u521B\u5EFA\u4E0D\u5B89\u5168\u51FD\u6570\u7684\u5B89\u5168\u62BD\u8C61</h4><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token keyword">mut</span> v <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> v<span class="token punctuation">[</span><span class="token punctuation">..</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

	<span class="token keyword">let</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">split_at_mut</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">split_at_mut</span><span class="token punctuation">(</span>slice<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mid<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> slice<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">assert!</span><span class="token punctuation">(</span>mid <span class="token operator">&lt;=</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> slice<span class="token punctuation">[</span><span class="token punctuation">..</span>mid<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> slice<span class="token punctuation">[</span>mid<span class="token punctuation">..</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token comment">// \u501F\u7528\u68C0\u67E5\u5176\u4E0D\u80FD\u7406\u89E3\u6211\u4EEC\u8981\u501F\u7528\u4E00\u4E2Aslice\u7684\u4E24\u4E2A\u4E0D\u540C\u90E8\u5206</span>
	<span class="token comment">// \u5B83\u53EA\u77E5\u9053\u6211\u4EEC\u501F\u7528\u8FD9\u4E2Aslice\u4E24\u6B21</span>
	<span class="token comment">// \u672C\u8D28\u4E0A\u501F\u7528 slice \u7684\u4E0D\u540C\u90E8\u5206\u662F\u53EF\u4EE5\u7684\uFF0C\u56E0\u4E3A\u7ED3\u679C\u4E24\u4E2A slice \u4E0D\u4F1A\u91CD\u53E0</span>
	<span class="token comment">// \u5F53\u6211\u4EEC\u77E5\u9053\u67D0\u4E9B\u4E8B\u662F\u53EF\u4EE5\u7684\u800C Rust \u4E0D\u77E5\u9053\u7684\u65F6\u5019\uFF0C\u5C31\u662F\u89E6\u53CA\u4E0D\u5B89\u5168\u4EE3\u7801\u7684\u65F6\u5019\u4E86</span>
<span class="token punctuation">}</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span>slice<span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">split_at_mut</span><span class="token punctuation">(</span>slice<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mid<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> slice<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> ptr <span class="token operator">=</span> slice<span class="token punctuation">.</span><span class="token function">as_mut_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u83B7\u53D6slice\u7684\u88F8\u6307\u9488\uFF0C\u7C7B\u578B\u4E3A*mut i32</span>

    <span class="token macro property">assert!</span><span class="token punctuation">(</span>mid <span class="token operator">&lt;=</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token namespace">slice<span class="token punctuation">::</span></span><span class="token function">from_raw_parts_mut</span><span class="token punctuation">(</span>ptr<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">,</span>
         <span class="token namespace">slice<span class="token punctuation">::</span></span><span class="token function">from_raw_parts_mut</span><span class="token punctuation">(</span>ptr<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">,</span> len <span class="token operator">-</span> mid<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
	<span class="token comment">// \u51FD\u6570\u662F\u4E0D\u5B89\u5168\u7684\u56E0\u4E3A\u5B83\u83B7\u53D6\u4E00\u4E2A\u88F8\u6307\u9488\uFF0C\u5E76\u5FC5\u987B\u786E\u4FE1\u8FD9\u4E2A\u6307\u9488\u662F\u6709\u6548\u7684</span>
	<span class="token comment">// \u88F8\u6307\u9488\u4E0A\u7684add\u65B9\u6CD5\u4E5F\u662F\u4E0D\u5B89\u5168\u7684\uFF0C\u56E0\u4E3A\u5176\u5FC5\u987B\u786E\u4FE1\u6B64\u5730\u5740\u504F\u79FB\u91CF\u4E5F\u662F\u6709\u6548\u7684\u6307\u9488</span>
	<span class="token comment">// \u901A\u8FC7\u89C2\u5BDF\u4EE3\u7801\uFF0C\u548C\u589E\u52A0mid\u5FC5\u7136\u5C0F\u4E8E\u7B49\u4E8Elen\u7684\u65AD\u8A00\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8BF4unsafe\u5757\u4E2D\u6240\u6709\u7684\u88F8\u6307\u9488\u5C06\u662F\u6709\u6548\u7684slice\u4E2D\u6570\u636E\u7684\u6307\u9488</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h4 id="\u8C03\u7528\u5916\u90E8\u4EE3\u7801" tabindex="-1">\u8C03\u7528\u5916\u90E8\u4EE3\u7801</h4><ul><li>\u6709\u65F6\uFF0CRust \u4EE3\u7801\u53EF\u80FD\u9700\u8981\u4E0E\u5176\u4ED6\u8BED\u8A00\u7F16\u5199\u7684\u4EE3\u7801\u4EA4\u4E92</li><li>\u4E3A\u6B64\uFF0CRust \u6709\u4E00\u4E2A\u5173\u952E\u5B57\uFF0C<code>extern</code>\uFF0C\u6709\u52A9\u4E8E\u521B\u5EFA\u548C\u4F7F\u7528\u5916\u90E8\u51FD\u6570\u63A5\u53E3 <ul><li>(Foreign Function Interface\uFF0C FFI)</li><li>\u5916\u90E8\u51FD\u6570\u63A5\u53E3\u662F\u4E00\u4E2A\u7F16\u7A0B\u8BED\u8A00\u7528\u4EE5\u5B9A\u4E49\u51FD\u6570\u7684\u65B9\u5F0F\uFF0C\u5176\u5141\u8BB8\u4E0D\u540C\u7F16\u7A0B\u8BED\u8A00\u8C03\u7528\u8FD9\u4E9B\u51FD\u6570</li></ul></li><li><code>extern</code> \u7684\u4F7F\u7528\u65E0\u9700 <code>unsafe</code></li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token comment">// rust\u8BBF\u95EE\u5176\u4ED6\u8BED\u8A00</span>
<span class="token comment">// &quot;C&quot; \u90E8\u5206\u5B9A\u4E49\u4E86\u5916\u90E8\u51FD\u6570\u6240\u4F7F\u7528\u7684 \u5E94\u7528\u4E8C\u8FDB\u5236\u63A5\u53E3(application binary interface)</span>
<span class="token comment">// ABI \u5B9A\u4E49\u4E86\u5982\u4F55\u5728\u6C47\u7F16\u8BED\u8A00\u5C42\u9762\u8C03\u7528\u6B64\u51FD\u6570</span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u5757\u4E2D\uFF0C\u5217\u51FA\u4E86\u6211\u4EEC\u5E0C\u671B\u80FD\u591F\u8C03\u7528\u7684\u53E6\u4E00\u4E2A\u8BED\u8A00\u4E2D\u7684\u5916\u90E8\u51FD\u6570\u7684\u7B7E\u540D\u548C\u540D\u79F0</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">abs</span><span class="token punctuation">(</span>input<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Absolute value of -3 according to C: {}&quot;</span><span class="token punctuation">,</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5176\u4ED6\u8BED\u8A00\u53EF\u4EE5\u8BBF\u95EErust</span>
<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">call_from_c</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Just called a Rust function from C!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="\u8BBF\u95EE\u6216\u4FEE\u6539\u53EF\u53D8\u9759\u6001\u53D8\u91CF" tabindex="-1">\u8BBF\u95EE\u6216\u4FEE\u6539\u53EF\u53D8\u9759\u6001\u53D8\u91CF</h3><ul><li>\u5168\u5C40\u53D8\u91CF\u5728 Rust \u4E2D\u88AB\u79F0\u4E3A \u9759\u6001(static) \u53D8\u91CF</li><li>\u9759\u6001\u53D8\u91CF\u53EA\u80FD\u50A8\u5B58\u62E5\u6709 <code>&#39;static</code> \u751F\u547D\u5468\u671F\u7684\u5F15\u7528</li><li>\u5E38\u91CF\u4E0E\u4E0D\u53EF\u53D8\u9759\u6001\u53D8\u91CF\u7684\u533A\u522B <ul><li>\u9759\u6001\u53D8\u91CF\u4E2D\u7684\u503C\u6709\u4E00\u4E2A\u56FA\u5B9A\u7684\u5185\u5B58\u5730\u5740\u3002\u4F7F\u7528\u8FD9\u4E2A\u503C\u603B\u662F\u4F1A\u8BBF\u95EE\u76F8\u540C\u7684\u5730\u5740</li><li>\u5E38\u91CF\u5219\u5141\u8BB8\u5728\u4EFB\u4F55\u88AB\u7528\u5230\u7684\u65F6\u5019\u590D\u5236\u5176\u6570\u636E</li></ul></li><li>\u9759\u6001\u53D8\u91CF\u53EF\u4EE5\u662F\u53EF\u53D8\u7684\u3002\u8BBF\u95EE\u548C\u4FEE\u6539\u53EF\u53D8\u9759\u6001\u53D8\u91CF\u90FD\u662F\u4E0D\u5B89\u5168\u7684</li><li>\u4E3A\u4F55 Rust \u8BA4\u4E3A\u53EF\u53D8\u9759\u6001\u53D8\u91CF\u662F\u4E0D\u5B89\u5168\u7684 <ul><li>\u62E5\u6709\u53EF\u4EE5\u5168\u5C40\u8BBF\u95EE\u7684\u53EF\u53D8\u6570\u636E\uFF0C\u96BE\u4EE5\u4FDD\u8BC1\u4E0D\u5B58\u5728\u6570\u636E\u7ADE\u4E89</li><li>\u4EFB\u4F55\u53EF\u80FD\u7684\u60C5\u51B5\uFF0C\u8BF7\u4F18\u5148\u4F7F\u7528\u7B2C\u5341\u516D\u7AE0\u8BA8\u8BBA\u7684\u5E76\u53D1\u6280\u672F\u548C\u7EBF\u7A0B\u5B89\u5168\u667A\u80FD\u6307\u9488\uFF0C\u8FD9\u6837\u7F16\u8BD1\u5668\u5C31\u80FD\u68C0\u6D4B\u4E0D\u540C\u7EBF\u7A0B\u95F4\u7684\u6570\u636E\u8BBF\u95EE\u662F\u5426\u662F\u5B89\u5168\u7684</li></ul></li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token comment">// \u521B\u5EFA\u548C\u8BBF\u95EE\u9759\u6001\u53D8\u91CF</span>
<span class="token keyword">static</span> <span class="token constant">HELLO_WORLD</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span> <span class="token operator">=</span> <span class="token string">&quot;Hello, world!&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;name is: {}&quot;</span><span class="token punctuation">,</span> <span class="token constant">HELLO_WORLD</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8BFB\u53D6\u548C\u4FEE\u6539\u53EF\u53D8\u9759\u6001\u53D8\u91CF</span>
<span class="token keyword">static</span> <span class="token keyword">mut</span> <span class="token constant">COUNTER</span><span class="token punctuation">:</span> <span class="token keyword">u32</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">add_to_count</span><span class="token punctuation">(</span>inc<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
        <span class="token constant">COUNTER</span> <span class="token operator">+=</span> inc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">add_to_count</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;COUNTER: {}&quot;</span><span class="token punctuation">,</span> <span class="token constant">COUNTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="\u5B9E\u73B0\u4E0D\u5B89\u5168-trait" tabindex="-1">\u5B9E\u73B0\u4E0D\u5B89\u5168 Trait</h3><ul><li>\u5F53 trait \u4E2D\u81F3\u5C11\u6709\u4E00\u4E2A\u65B9\u6CD5\u4E2D\u5305\u542B\u7F16\u8BD1\u5668\u65E0\u6CD5\u9A8C\u8BC1\u7684\u4E0D\u53D8\u5F0F\u65F6 trait \u662F\u4E0D\u5B89\u5168\u7684</li><li><strong>\u540E\u9762\u4E3E\u4E86\u4E00\u4E2A\u5E76\u53D1\u7684\u4F8B\u5B50\uFF0C\u4E0D\u8FC7\u4E0D\u592A\u7406\u89E3</strong></li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">unsafe</span> <span class="token keyword">trait</span> <span class="token type-definition class-name">Foo</span> <span class="token punctuation">{</span>
    <span class="token comment">// methods go here</span>
<span class="token punctuation">}</span>

<span class="token keyword">unsafe</span> <span class="token keyword">impl</span> <span class="token class-name">Foo</span> <span class="token keyword">for</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
    <span class="token comment">// method implementations go here</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u8BBF\u95EE-union-\u7684\u5B57\u6BB5" tabindex="-1">\u8BBF\u95EE union \u7684\u5B57\u6BB5</h3><ul><li><code>union</code> \u548C <code>struct</code> \u7C7B\u4F3C\uFF0C\u4F46\u662F\u5728\u4E00\u4E2A\u5B9E\u4F8B\u4E2D\u540C\u65F6\u53EA\u80FD\u4F7F\u7528\u4E00\u4E2A\u58F0\u660E\u7684\u5B57\u6BB5</li><li>\u8054\u5408\u4F53\u4E3B\u8981\u7528\u4E8E\u548C C \u4EE3\u7801\u4E2D\u7684\u8054\u5408\u4F53\u4EA4\u4E92</li></ul><h2 id="\u4F55\u65F6\u4F7F\u7528-unsafe-code" tabindex="-1">\u4F55\u65F6\u4F7F\u7528 unsafe code</h2><ul><li>\u9700\u8981\u4E0A\u8FF0\u4E94\u4E2A\u64CD\u4F5C\u65F6\u5C31\u53EF\u4EE5\u4F7F\u7528</li></ul><h1 id="\u9AD8\u7EA7-trait" tabindex="-1">\u9AD8\u7EA7 Trait</h1><h1 id="\u9AD8\u7EA7\u7C7B\u578B" tabindex="-1">\u9AD8\u7EA7\u7C7B\u578B</h1><h1 id="\u9AD8\u7EA7\u51FD\u6570\u4E0E\u95ED\u5305" tabindex="-1">\u9AD8\u7EA7\u51FD\u6570\u4E0E\u95ED\u5305</h1><h2 id="\u51FD\u6570\u6307\u9488" tabindex="-1">\u51FD\u6570\u6307\u9488</h2><ul><li>fn \u88AB\u79F0\u4E3A\u51FD\u6570\u6307\u9488\uFF0C\u662F\u4E00\u4E2A\u7C7B\u578B\u800C\u4E0D\u662F\u95ED\u5305\u7684 Fn Trait</li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">do_twice</span><span class="token punctuation">(</span>f<span class="token punctuation">:</span> <span class="token keyword">fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> arg<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span> <span class="token function">f</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">f</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><ul><li>\u503E\u5411\u4E8E\u7F16\u5199\u4F7F\u7528\u6CDB\u578B\u548C\u95ED\u5305 trait \u7684\u51FD\u6570\uFF0C\u8FD9\u6837\u5B83\u5C31\u80FD\u63A5\u53D7\u51FD\u6570\u6216\u95ED\u5305\u4F5C\u4E3A\u53C2\u6570</li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">let</span> list_of_numbers <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> list_of_strings<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span> <span class="token operator">=</span> list_of_numbers
									<span class="token punctuation">.</span><span class="token function">iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
									<span class="token comment">// \u4E0B\u9762\u4E24\u8005\u6548\u679C\u4E00\u6837</span>
									<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>i<span class="token closure-punctuation punctuation">|</span></span> i<span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// \u95ED\u5305\u4F5C\u53C2\u6570</span>
									<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">ToString</span><span class="token punctuation">::</span>to_string<span class="token punctuation">)</span><span class="token comment">// \u51FD\u6570\u505A\u53C2\u6570</span>
									<span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u8FD4\u56DE\u503C\u95ED\u5305" tabindex="-1">\u8FD4\u56DE\u503C\u95ED\u5305</h2><ul><li>\u95ED\u5305\u8868\u73B0\u4E3A Trait\uFF0C\u6240\u4EE5\u53EF\u4EE5\u4F7F\u7528 trait \u5BF9\u8C61\u8FD4\u56DE\u95ED\u5305</li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">returns_closure</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token keyword">dyn</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span> <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>x<span class="token closure-punctuation punctuation">|</span></span> x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h1 id="\u5B8F" tabindex="-1">\u5B8F</h1>`,34),o=[e];function c(l,u,i,r,k,m){return a(),s("div",null,o)}var f=n(t,[["render",c]]);export{d as __pageData,f as default};
