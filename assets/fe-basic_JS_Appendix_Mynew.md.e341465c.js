import{_ as n,c as s,o as a,a as p}from"./app.6117d463.js";const b='{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"fe-basic/JS/Appendix/Mynew.md"}',t={},o=p(`<div class="language-js line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token parameter">Ctor<span class="token punctuation">,</span> <span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Ctor</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Ctor<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a constructor</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
	
  <span class="token keyword">const</span> instance <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">constructor</span><span class="token operator">:</span> Ctor <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">Ctor</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>
  
  
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">Ctor</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> params<span class="token punctuation">)</span>
  <span class="token keyword">const</span> isObject <span class="token operator">=</span> result <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> result <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span>
  <span class="token keyword">const</span> isFunction <span class="token operator">=</span> <span class="token keyword">typeof</span> result <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
  
  <span class="token keyword">return</span> isObject <span class="token operator">||</span> isFunction <span class="token operator">?</span> result <span class="token operator">:</span> instance
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,1),e=[o];function c(r,l,u,i,k,d){return a(),s("div",null,e)}var _=n(t,[["render",c]]);export{b as __pageData,_ as default};
