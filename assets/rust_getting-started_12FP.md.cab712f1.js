import{_ as n,c as s,o as a,a as p}from"./app.192460d6.js";const d='{"title":"\u95ED\u5305","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u95ED\u5305\u7C7B\u578B\u63A8\u65AD\u548C\u6CE8\u89E3","slug":"\u95ED\u5305\u7C7B\u578B\u63A8\u65AD\u548C\u6CE8\u89E3"},{"level":3,"title":"\u6BD4\u8F83\u51FD\u6570\u548C\u95ED\u5305\u7684\u5B9A\u4E49\u8BED\u6CD5","slug":"\u6BD4\u8F83\u51FD\u6570\u548C\u95ED\u5305\u7684\u5B9A\u4E49\u8BED\u6CD5"},{"level":3,"title":"\u95ED\u5305\u6700\u7EC8\u53EA\u4F1A\u63A8\u65AD\u552F\u4E00\u5177\u4F53\u7C7B\u578B","slug":"\u95ED\u5305\u6700\u7EC8\u53EA\u4F1A\u63A8\u65AD\u552F\u4E00\u5177\u4F53\u7C7B\u578B"},{"level":3,"title":"\u4F7F\u7528\u6CDB\u578B\u548C Fn Trait \u5B58\u50A8\u95ED\u5305","slug":"\u4F7F\u7528\u6CDB\u578B\u548C-fn-trait-\u5B58\u50A8\u95ED\u5305"},{"level":2,"title":"\u95ED\u5305\u4F1A\u6355\u83B7\u5176\u73AF\u5883","slug":"\u95ED\u5305\u4F1A\u6355\u83B7\u5176\u73AF\u5883"},{"level":3,"title":"\u95ED\u5305\u6355\u83B7\u73AF\u5883\u7684\u65B9\u5F0F","slug":"\u95ED\u5305\u6355\u83B7\u73AF\u5883\u7684\u65B9\u5F0F"},{"level":2,"title":"\u6700\u4F73\u5B9E\u8DF5","slug":"\u6700\u4F73\u5B9E\u8DF5"},{"level":2,"title":"Iterator trait \u548C next \u65B9\u6CD5","slug":"iterator-trait-\u548C-next-\u65B9\u6CD5"},{"level":3,"title":"\u8FED\u4EE3\u65B9\u6CD5","slug":"\u8FED\u4EE3\u65B9\u6CD5"},{"level":2,"title":"\u6D88\u8D39\u4E0E\u4EA7\u751F\u8FED\u4EE3\u5668","slug":"\u6D88\u8D39\u4E0E\u4EA7\u751F\u8FED\u4EE3\u5668"},{"level":2,"title":"\u4F7F\u7528\u95ED\u5305\u83B7\u53D6\u73AF\u5883","slug":"\u4F7F\u7528\u95ED\u5305\u83B7\u53D6\u73AF\u5883"},{"level":2,"title":"\u5B9E\u73B0 Iterator trait \u6765\u521B\u5EFA\u81EA\u5B9A\u4E49\u8FED\u4EE3\u5668","slug":"\u5B9E\u73B0-iterator-trait-\u6765\u521B\u5EFA\u81EA\u5B9A\u4E49\u8FED\u4EE3\u5668"}],"relativePath":"rust/getting-started/12FP.md"}',t={},e=p(`<h1 id="\u95ED\u5305" tabindex="-1">\u95ED\u5305</h1><ul><li>\u95ED\u5305\uFF1A\u53EF\u4EE5\u6355\u83B7\u5176\u5185\u5728\u73AF\u5883\u7684\u533F\u540D\u51FD\u6570</li><li>\u7279\u70B9 <ul><li>\u533F\u540D\u51FD\u6570</li><li>\u53EF\u88AB\u4FDD\u5B58\u4E3A\u53D8\u91CF\u6216\u4F5C\u4E3A\u53C2\u6570</li><li>\u53EF\u5728\u4E00\u4E2A\u5730\u65B9\u521B\u5EFA\u95ED\u5305\uFF0C\u5728\u53E6\u4E00\u4E2A\u4E0A\u4E0B\u6587\u8C03\u7528\u95ED\u5305\u5B8C\u6210\u8FD0\u7B97</li><li>\u8C03\u7528\u95ED\u5305\u7684\u4F5C\u7528\u57DF\u53EF\u4ECE\u521B\u5EFA\u7684\u4F5C\u7528\u57DF\u6355\u83B7\u503C</li></ul></li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token comment">// \u5B9A\u4E49\u533F\u540D\u51FD\u6570</span>
<span class="token keyword">let</span> expensive_closure <span class="token operator">=</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>num<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
	<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;calculating slowly...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token namespace">thread<span class="token punctuation">::</span></span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_secs</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	num
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u95ED\u5305\u7C7B\u578B\u63A8\u65AD\u548C\u6CE8\u89E3" tabindex="-1">\u95ED\u5305\u7C7B\u578B\u63A8\u65AD\u548C\u6CE8\u89E3</h2><ul><li>\u95ED\u5305\u4E0D\u8981\u6C42\u6807\u6CE8\u548C\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\uFF0C\u7F16\u8BD1\u5668\u4F1A\u4ECE\u5176\u4E0A\u4E0B\u6587\u81EA\u52A8\u63A8\u65AD\u3002\u4E5F\u53EF\u4EE5\u81EA\u5DF1\u624B\u52A8\u52A0</li></ul><h3 id="\u6BD4\u8F83\u51FD\u6570\u548C\u95ED\u5305\u7684\u5B9A\u4E49\u8BED\u6CD5" tabindex="-1">\u6BD4\u8F83\u51FD\u6570\u548C\u95ED\u5305\u7684\u5B9A\u4E49\u8BED\u6CD5</h3><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">add_one_v1</span> <span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">u32</span> <span class="token punctuation">{</span> x <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> add_one_v2 <span class="token operator">=</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>x<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">-&gt;</span> <span class="token keyword">u32</span> <span class="token punctuation">{</span> x <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> add_one_v3 <span class="token operator">=</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>x<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span> x <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> add_one_v4 <span class="token operator">=</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>x<span class="token closure-punctuation punctuation">|</span></span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u95ED\u5305\u6700\u7EC8\u53EA\u4F1A\u63A8\u65AD\u552F\u4E00\u5177\u4F53\u7C7B\u578B" tabindex="-1">\u95ED\u5305\u6700\u7EC8\u53EA\u4F1A\u63A8\u65AD\u552F\u4E00\u5177\u4F53\u7C7B\u578B</h3><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">let</span> example_closure <span class="token operator">=</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>x<span class="token closure-punctuation punctuation">|</span></span> x<span class="token punctuation">;</span><span class="token comment">// \u5355\u72EC\u5B9A\u4E49\u4F1A\u62A5\u9519\uFF0C\u4EE5\u4E3A\u7F16\u8BD1\u5668\u4E0D\u80FD\u63A8\u65AD\u51FA\u7C7B\u578B</span>

<span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">example_closure</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u7F16\u8BD1\u5668\u5C06\u95ED\u5305\u63A8\u65AD\u4E3A\u5B57\u7B26\u4E32\u7C7B\u578B</span>
<span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token function">example_closure</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u62A5\u9519\uFF0C\u56E0\u4E3A5\u662F\u6574\u578B\uFF0C\u4E0E\u95ED\u5305\u7684\u7C7B\u578B\u4E0D\u7B26</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u4F7F\u7528\u6CDB\u578B\u548C-fn-trait-\u5B58\u50A8\u95ED\u5305" tabindex="-1">\u4F7F\u7528\u6CDB\u578B\u548C Fn Trait \u5B58\u50A8\u95ED\u5305</h3><ul><li>\u4E3A\u4E86\u4F7F\u95ED\u5305\u5728\u9700\u8981\u6267\u884C\u7684\u65F6\u5019\u624D\u4F1A\u88AB\u6267\u884C\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8FDB\u884C\u8BB0\u5FC6\u5316\u6216\u53EB\u5EF6\u8FDF\u8BA1\u7B97 <ol><li>\u521B\u5EFA\u4E00\u4E2A\u7ED3\u6784\u4F53\uFF0C\u4ED6\u6301\u6709\u95ED\u5305\u53CA\u5176\u8C03\u7528\u7ED3\u679C <ul><li>\u53EA\u4F1A\u5728\u9700\u8981\u7ED3\u679C\u65F6\u624D\u6267\u884C\u95ED\u5305</li><li>\u53EF\u7F13\u5B58\u7ED3\u679C</li></ul></li></ol></li><li>\u8BA9 struct \u6301\u6709\u95ED\u5305 <ul><li>\u7ED3\u6784\u4F53\u7684\u5B9A\u4E49\u9700\u8981\u77E5\u9053\u6240\u6709\u5B57\u6BB5\u7684\u7C7B\u578B <ul><li>\u9700\u8981\u6307\u660E\u95ED\u5305\u7684\u7C7B\u578B</li></ul></li><li>\u6BCF\u4E2A\u95ED\u5305\u662F\u91CC\u90FD\u6709\u81EA\u5DF1\u552F\u4E00\u7684\u533F\u540D\u7C7B\u578B\uFF0C\u5373\u4F7F\u4E24\u4E2A\u95ED\u5305\u7B7E\u540D\u5B8C\u5168\u4E00\u6837</li><li>\u9700\u8981\u4F7F\u7528\u6CDB\u578B\u548C Trait Bound</li></ul></li><li>Fn Trait <ul><li>\u7531\u6807\u51C6\u5E93\u63D0\u4F9B</li><li>\u6240\u6709\u95ED\u5305\u90FD\u81F3\u5C11\u5B9E\u73B0\u4E86\u4EE5\u4E0B Trait \u4E4B\u4E00 <ul><li>Fn</li><li>FnMut</li><li>FnOnce</li></ul></li></ul></li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Cacher</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span>
<span class="token keyword">where</span>
	<span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">u32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">u32</span>
<span class="token punctuation">{</span>
	calculation<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">,</span>
	value<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token keyword">u32</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token class-name">Cacher</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span>
<span class="token keyword">where</span>
	<span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">u32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">u32</span>
<span class="token punctuation">{</span>
	<span class="token keyword">fn</span> <span class="token function-definition function">new</span><span class="token punctuation">(</span>calculation<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Cacher</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
		<span class="token class-name">Cacher</span> <span class="token punctuation">{</span>
			calculation<span class="token punctuation">,</span>
			value<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">fn</span> <span class="token function-definition function">value</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> arg<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">u32</span> <span class="token punctuation">{</span>
		<span class="token keyword">match</span> <span class="token keyword">self</span><span class="token punctuation">.</span>value <span class="token punctuation">{</span>
			<span class="token class-name">Some</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">,</span>
			<span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>calculation<span class="token punctuation">)</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">self</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
				v
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><ul><li>\u7F13\u5B58\u5668\u7684\u9650\u5236 <ul><li>\u603B\u662F\u4F1A\u8FD4\u56DE\u7B2C\u4E00\u6B21\u8C03\u7528\u7684\u503C <ul><li>\u53EF\u4EE5\u4F7F\u7528 HashMap\uFF1Akey - value =&gt; arg - result</li></ul></li><li>\u53EA\u80FD\u63A5\u53D7\u4E00\u4E2A u32 \u7C7B\u578B\u7684\u53C2\u6570\u548C u32 \u7C7B\u578B\u7684\u8FD4\u56DE\u503C</li></ul></li></ul><h2 id="\u95ED\u5305\u4F1A\u6355\u83B7\u5176\u73AF\u5883" tabindex="-1">\u95ED\u5305\u4F1A\u6355\u83B7\u5176\u73AF\u5883</h2><ul><li>\u51FD\u6570\u4E0D\u53EF\u4EE5\u6355\u83B7\u5916\u90E8\u4F5C\u7528\u57DF\u7684\u53D8\u91CF</li><li>\u4EE5\u4E3A\u6355\u83B7\u73AF\u5883\u4F1A\u4EA7\u751F\u5185\u5B58\u5F00\u9500\uFF0C\u6240\u4EE5\u5728\u66F4\u4E00\u822C\u7684\u73AF\u5883\u65F6\uFF0C\u51FD\u6570\u4E0D\u88AB\u5141\u8BB8\u6355\u83B7\u73AF\u5883</li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> z <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> example_closure <span class="token operator">=</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>x<span class="token closure-punctuation punctuation">|</span></span> z <span class="token operator">==</span> x<span class="token punctuation">;</span>
	<span class="token keyword">fn</span> <span class="token function-definition function">example_function</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span> <span class="token punctuation">{</span>
		z <span class="token operator">==</span> x <span class="token comment">// \u4E0D\u80FD\u8BFB\u53D6 z</span>
	<span class="token punctuation">}</span>
	<span class="token macro property">assert!</span><span class="token punctuation">(</span><span class="token function">example_function</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u95ED\u5305\u6355\u83B7\u73AF\u5883\u7684\u65B9\u5F0F" tabindex="-1">\u95ED\u5305\u6355\u83B7\u73AF\u5883\u7684\u65B9\u5F0F</h3><ul><li>\u5BF9\u5E94\u51FD\u6570\u7684\u4E09\u79CD\u83B7\u53D6\u53C2\u6570\u7684\u65B9\u5F0F\uFF1A <ol><li>\u53D6\u5F97\u6240\u6709\u6743 - FnOnce -\u83B7\u53D6\u53C2\u6570\u7684\u6240\u6709\u6743\u5E76\u5728\u5B9A\u4E49\u95ED\u5305\u65F6\u5C06\u5176\u79FB\u52A8\u8FDB\u95ED\u5305</li><li>\u53EF\u53D8\u501F\u7528 - FnMut - \u83B7\u53D6\u53EF\u53D8\u7684\u501F\u7528\u503C\u6240\u4EE5\u53EF\u4EE5\u6539\u53D8\u5176\u73AF\u5883</li><li>\u4E0D\u53EF\u53D8\u501F\u7528 - Fn - \u4ECE\u5176\u73AF\u5883\u83B7\u53D6\u4E0D\u53EF\u53D8\u7684\u501F\u7528\u503C</li></ol></li><li>FnOnce \u7684 <code>Once</code> \u90E8\u5206\u4EE3\u8868\u4E86\u95ED\u5305\u4E0D\u80FD\u591A\u6B21\u83B7\u53D6\u76F8\u540C\u53D8\u91CF\u7684\u6240\u6709\u6743\u7684\u4E8B\u5B9E\uFF0C\u6240\u4EE5\u5B83\u53EA\u80FD\u88AB\u8C03\u7528\u4E00\u6B21\u3002</li><li>\u521B\u5EFA\u95ED\u5305\u65F6\uFF0C\u901A\u8FC7\u95ED\u5305\u5BF9\u73AF\u5883\u503C\u7684\u4F7F\u7528\uFF0CRust \u63A8\u65AD\u51FA\u5177\u4F53\u4F7F\u7528\u54EA\u4E2A Trait\uFF1A <ul><li>\u7531\u4E8E\u6240\u6709\u95ED\u5305\u90FD\u53EF\u4EE5\u88AB\u8C03\u7528\u81F3\u5C11\u4E00\u6B21\uFF0C\u6240\u6709\u7684\u95ED\u5305\u90FD\u5B9E\u73B0\u4E86 FnOnce</li><li>\u5E76\u6CA1\u6709\u79FB\u52A8\u88AB\u6355\u83B7\u53D8\u91CF\u7684\u6240\u6709\u6743\u5230\u95ED\u5305\u5185\u7684\u95ED\u5305 \u5B9E\u73B0\u4E86 FnMut</li><li>\u4E0D\u9700\u8981\u5BF9\u88AB\u6355\u83B7\u7684\u53D8\u91CF\u8FDB\u884C\u53EF\u53D8\u8BBF\u95EE\u7684\u95ED\u5305 \u5B9E\u73B0\u4E86 Fn</li></ul></li><li>move \u5173\u952E\u5B57 <ul><li>\u5982\u679C\u4F60\u5E0C\u671B\u5F3A\u5236\u95ED\u5305\u83B7\u53D6\u5176\u4F7F\u7528\u7684\u73AF\u5883\u503C\u7684\u6240\u6709\u6743\uFF0C\u53EF\u4EE5\u5728\u53C2\u6570\u5217\u8868\u524D\u4F7F\u7528 <code>move</code> \u5173\u952E\u5B57\u3002</li><li>\u8FD9\u4E2A\u6280\u5DE7\u5728\u5C06\u95ED\u5305\u4F20\u9012\u7ED9\u65B0\u7EBF\u7A0B\u4EE5\u4FBF\u5C06\u6570\u636E\u79FB\u52A8\u5230\u65B0\u7EBF\u7A0B\u4E2D\u65F6\u6700\u4E3A\u5B9E\u7528\u3002</li></ul></li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> equal_to_x <span class="token operator">=</span> <span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>z<span class="token closure-punctuation punctuation">|</span></span> z <span class="token operator">==</span> x<span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;can&#39;t use x here: {:?}&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u62A5\u9519\uFF0C\u56E0\u4E3Ax\u7684\u6240\u6709\u6743\u88AB\u79FB\u5165\u95ED\u5305</span>

    <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token macro property">assert!</span><span class="token punctuation">(</span><span class="token function">equal_to_x</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="\u6700\u4F73\u5B9E\u8DF5" tabindex="-1">\u6700\u4F73\u5B9E\u8DF5</h2><p>\u5927\u90E8\u5206\u9700\u8981\u6307\u5B9A\u4E00\u4E2A <code>Fn</code> \u7CFB\u5217 trait bound \u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u4ECE <code>Fn</code> \u5F00\u59CB\uFF0C \u800C\u7F16\u8BD1\u5668\u4F1A\u6839\u636E\u95ED\u5305\u4F53\u4E2D\u7684\u60C5\u51B5\u544A\u8BC9\u4F60\u662F\u5426\u9700\u8981 <code>FnMut</code> \u6216 <code>FnOnce</code>\u3002</p><h1 id="\u8FED\u4EE3\u5668" tabindex="-1">\u8FED\u4EE3\u5668</h1><ul><li>\u8FED\u4EE3\u5668\u6A21\u5F0F\uFF1A\u5BF9\u4E00\u4E9B\u5217\u9879\u6267\u884C\u67D0\u4E9B\u4EFB\u52A1</li><li>\u8FED\u4EE3\u5668\u8D1F\u8D23\u904D\u5386\u6BCF\u4E2A\u9879\u5E76\u786E\u5B9A\u904D\u5386\u4F55\u65F6\u5B8C\u6210</li><li>Rust \u4E2D\u7684\u8FED\u4EE3\u5668 <ul><li>\u60F0\u6027\uFF1A\u9664\u975E\u8C03\u7528\u6D88\u8D39\u8FED\u4EE3\u5668\u7684\u65B9\u6CD5\uFF0C\u5426\u5219\u8FED\u4EE3\u5668\u672C\u8EAB\u6CA1\u6709\u4EFB\u4F55\u6548\u679C</li></ul></li></ul><h2 id="iterator-trait-\u548C-next-\u65B9\u6CD5" tabindex="-1"><code>Iterator</code> trait \u548C <code>next</code> \u65B9\u6CD5</h2><ul><li>\u6240\u6709\u8FED\u4EE3\u5668\u90FD\u5B9E\u73B0\u4E86<code>Iterator Trait</code></li><li>\u5728\u6807\u51C6\u5E93\u4E2D\u7684\u5927\u81F4\u5B9A\u4E49</li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">pub</span> <span class="token keyword">trait</span> <span class="token type-definition class-name">Iterator</span> <span class="token punctuation">{</span>
	<span class="token keyword">type</span> <span class="token type-definition class-name">Item</span><span class="token punctuation">;</span>
	<span class="token keyword">fn</span> <span class="token function-definition function">next</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token class-name">Item</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
	<span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u8BE5 trait \u4EC5\u8981\u6C42\u5B9E\u73B0\u4E00\u4E2A\u65B9\u6CD5\uFF1Anext</li><li>next \u65B9\u6CD5 <ul><li>\u6BCF\u6B21\u8FD4\u56DE\u8FED\u4EE3\u5668\u4E2D\u7684\u4E00\u9879</li><li>\u8FD4\u56DE\u7ED3\u679C\u5305\u542B\u5728 Some \u91CC</li><li>\u8FED\u4EE3\u7ED3\u675F\u540E\u8FD4\u56DE None</li><li>PS:\u4E0E es6 \u91CC\u7684 Generator \u597D\u50CF</li></ul></li><li>\u53EF\u76F4\u63A5\u5728\u8FED\u4EE3\u5668\u4E0A\u8C03\u7528 next \u65B9\u6CD5</li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">let</span> v1 <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token keyword">mut</span> v1_iter <span class="token operator">=</span> v1<span class="token punctuation">.</span><span class="token function">iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>v1_iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>v1_iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>v1_iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u8FED\u4EE3\u65B9\u6CD5" tabindex="-1">\u8FED\u4EE3\u65B9\u6CD5</h3><ul><li>iter():\u5728\u4E0D\u53EF\u53D8\u5F15\u7528\u4E0A\u521B\u5EFA\u8FED\u4EE3\u5668</li><li>into_iter():\u521B\u5EFA\u7684\u8FED\u4EE3\u5668\u4F1A\u83B7\u53D6\u6240\u6709\u6743</li><li>iter_mut():\u8FED\u4EE3\u53EF\u53D8\u5F15\u7528</li></ul><h2 id="\u6D88\u8D39\u4E0E\u4EA7\u751F\u8FED\u4EE3\u5668" tabindex="-1">\u6D88\u8D39\u4E0E\u4EA7\u751F\u8FED\u4EE3\u5668</h2><ul><li>\u6D88\u8D39\u9002\u914D\u5668\uFF1A<code>Iterator Trait</code>\u63D0\u4F9B\u7684\u9ED8\u8BA4\u5B9E\u73B0\u7684\u8C03\u7528 <code>next</code> \u65B9\u6CD5\u7684\u65B9\u6CD5\u3002</li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token attribute attr-name">#[test]</span>
<span class="token keyword">fn</span> <span class="token function-definition function">iterator_sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> v1 <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> v1_iter <span class="token operator">=</span> v1<span class="token punctuation">.</span><span class="token function">iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> total<span class="token punctuation">:</span> <span class="token keyword">i32</span> <span class="token operator">=</span> v1_iter<span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>\u8FED\u4EE3\u5668\u9002\u914D\u5668\uFF1A\u5141\u8BB8\u6211\u4EEC\u5C06\u5F53\u524D\u8FED\u4EE3\u5668\u53D8\u4E3A\u4E0D\u540C\u7C7B\u578B\u7684\u8FED\u4EE3\u5668\u3002 <ul><li>\u53EF\u4EE5\u94FE\u5F0F\u8C03\u7528\u591A\u4E2A\u8FED\u4EE3\u5668\u9002\u914D\u5668</li><li>\u56E0\u4E3A\u6240\u6709\u7684\u8FED\u4EE3\u5668\u90FD\u662F\u60F0\u6027\u7684\uFF0C\u5FC5\u987B\u8C03\u7528\u4E00\u4E2A\u6D88\u8D39\u9002\u914D\u5668\u65B9\u6CD5\u4EE5\u4FBF\u83B7\u53D6\u8FED\u4EE3\u5668\u9002\u914D\u5668\u8C03\u7528\u7684\u7ED3\u679C</li></ul></li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">let</span> v1<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// v1.iter().map(|x| x + 1);// \u4EA7\u751F\u8B66\u544A\uFF0C\u56E0\u4E3A\u6CA1\u6709\u6D88\u8D39\u521B\u5EFA\u7684\u8FED\u4EE3\u5668\uFF0C\u95ED\u5305\u4E0D\u4F1A\u6267\u884C</span>
<span class="token comment">// \u8C03\u7528\`map\`\u65B9\u6CD5\u521B\u5EFA\u4E00\u4E2A\u65B0\u8FED\u4EE3\u5668\uFF0C\u63A5\u7740\u8C03\u7528\`collect\`\u65B9\u6CD5\u6D88\u8D39\u65B0\u8FED\u4EE3\u5668\u5E76\u521B\u5EFA\u4E00\u4E2A vector</span>
<span class="token keyword">let</span> v2<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span>_<span class="token operator">&gt;</span> <span class="token operator">=</span> v1<span class="token punctuation">.</span><span class="token function">iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>x<span class="token closure-punctuation punctuation">|</span></span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>v2<span class="token punctuation">,</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u4F7F\u7528\u95ED\u5305\u83B7\u53D6\u73AF\u5883" tabindex="-1">\u4F7F\u7528\u95ED\u5305\u83B7\u53D6\u73AF\u5883</h2><div class="language-rust line-numbers-mode"><pre><code><span class="token attribute attr-name">#[derive(PartialEq, Debug)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Shoe</span> <span class="token punctuation">{</span> size<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">,</span> style<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token punctuation">}</span>
<span class="token keyword">fn</span> <span class="token function-definition function">shoes_in_my_size</span><span class="token punctuation">(</span>shoes<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">Shoe</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> shoe_size<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">Shoe</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
	shoes<span class="token punctuation">.</span><span class="token function">into_iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>s<span class="token closure-punctuation punctuation">|</span></span> s<span class="token punctuation">.</span>size <span class="token operator">==</span> shoe_size<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="\u5B9E\u73B0-iterator-trait-\u6765\u521B\u5EFA\u81EA\u5B9A\u4E49\u8FED\u4EE3\u5668" tabindex="-1">\u5B9E\u73B0 <code>Iterator</code> trait \u6765\u521B\u5EFA\u81EA\u5B9A\u4E49\u8FED\u4EE3\u5668</h2><ul><li>\u5173\u952E\uFF1A\u5B9E\u73B0\u4E00\u4E2A next \u65B9\u6CD5</li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Counter</span> <span class="token punctuation">{</span>
    count<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span>
        <span class="token class-name">Counter</span> <span class="token punctuation">{</span> count<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Iterator</span> <span class="token keyword">for</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FED\u4EE3\u5668\u4F1A\u4EA7\u751F u32s</span>
    <span class="token keyword">type</span> <span class="token type-definition class-name">Item</span> <span class="token operator">=</span> <span class="token keyword">u32</span><span class="token punctuation">;</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">next</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token class-name">Item</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// count \u81EA\u589E 1\u3002\u4E5F\u5C31\u662F\u4E3A\u4EC0\u4E48\u4ECE 0 \u5F00\u59CB\u3002</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>count <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>

        <span class="token comment">// \u68C0\u6D4B\u662F\u5426\u7ED3\u675F\u7ED3\u675F\u8BA1\u6570\u3002</span>
        <span class="token keyword">if</span> <span class="token keyword">self</span><span class="token punctuation">.</span>count <span class="token operator">&lt;</span> <span class="token number">6</span> <span class="token punctuation">{</span>
            <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>count<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">None</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[test]</span>
<span class="token keyword">fn</span> <span class="token function-definition function">using_other_iterator_trait_methods</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> sum<span class="token punctuation">:</span> <span class="token keyword">u32</span> <span class="token operator">=</span> <span class="token class-name">Counter</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">zip</span><span class="token punctuation">(</span><span class="token class-name">Counter</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                                 <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token closure-punctuation punctuation">|</span></span> a <span class="token operator">*</span> b<span class="token punctuation">)</span>
                                 <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>x<span class="token closure-punctuation punctuation">|</span></span> x <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                                 <span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// zip\u4EA7\u751F\u4E00\u4E2Avec![2,3,4,5]</span>
	<span class="token comment">// map\u4EA7\u751Fvec![2,6,12,20]</span>
	<span class="token comment">// filter\u4EA7\u751Fvec![6,12]</span>
	<span class="token comment">// sum\u4EA7\u751F6 + 12 = 18</span>
    <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h1 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3</h1><p>Rust \u5E95\u5C42\u505A\u8FC7\u4F18\u5316\uFF0C\u8FED\u4EE3\u5668\u6BD4\u5FAA\u73AF\u6027\u80FD\u8FD8\u597D\u4E00\u4E9B\u3002</p>`,42),o=[e];function c(l,u,i,r,k,m){return a(),s("div",null,o)}var y=n(t,[["render",c]]);export{d as __pageData,y as default};
