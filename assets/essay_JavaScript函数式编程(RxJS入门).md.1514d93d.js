import{_ as n,c as s,o as a,a as p}from"./app.635358c2.js";const d='{"title":"\u6570\u7EC4\u7684\u51FD\u6570\u5F0F\u64CD\u4F5C","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6570\u7EC4\u7684\u51FD\u6570\u5F0F\u64CD\u4F5C","slug":"\u6570\u7EC4\u7684\u51FD\u6570\u5F0F\u64CD\u4F5C"},{"level":2,"title":"\u4EE5\u4E0B\u662F RxJS \u7684\u76F8\u5173\u90E8\u5206","slug":"\u4EE5\u4E0B\u662F-rxjs-\u7684\u76F8\u5173\u90E8\u5206"},{"level":3,"title":"\u4F7F\u7528 Observable","slug":"\u4F7F\u7528-observable"},{"level":3,"title":"\u67E5\u8BE2 Observable","slug":"\u67E5\u8BE2-observable"}],"relativePath":"essay/JavaScript\u51FD\u6570\u5F0F\u7F16\u7A0B(RxJS\u5165\u95E8).md"}',t={},e=p(`<h2 id="\u6570\u7EC4\u7684\u51FD\u6570\u5F0F\u64CD\u4F5C" tabindex="-1">\u6570\u7EC4\u7684\u51FD\u6570\u5F0F\u64CD\u4F5C</h2><div class="language-js line-numbers-mode"><pre><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">map</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">projectionFunction</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">itemInArray</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    results<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">projectionFunction</span><span class="token punctuation">(</span>itemInArray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> results<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">filter</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">predicateFunction</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">itemInArray</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">predicateFunction</span><span class="token punctuation">(</span>itemInArray<span class="token punctuation">)</span><span class="token punctuation">)</span> results<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>itemInArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> results<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">reduce</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">combiner<span class="token punctuation">,</span> initialValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u6570\u7EC4\u662F\u7A7A\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> accumulatedValue <span class="token operator">=</span> initialValue<span class="token punctuation">,</span>
    count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    accumulatedValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token string">&#39;Invalid arguments&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> count <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> count<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    accumulatedValue <span class="token operator">=</span> <span class="token function">combiner</span><span class="token punctuation">(</span>accumulatedValue<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> accumulatedValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u89E3\u51B3\u5D4C\u5957\u6570\u7EC4</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">concatAll</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> subArray</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>subArray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// JSON.stringify([ [1,2,3], [4,5,6], [7,8,9] ].concatAll()) === &quot;[1,2,3,4,5,6,7,8,9]&quot;</span>
<span class="token comment">// [1,2,3].concatAll(); // throws an error because this is a one-dimensional array</span>

<span class="token comment">// \u5904\u7406 map \u548C concatAll \u8FDE\u7528</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">concatMap</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">projectionFunctionThatReturnsArray</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token function">projectionFunctionThatReturnsArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concatAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u5408\u5E76\u6570\u7EC4</span>
Array<span class="token punctuation">.</span><span class="token function-variable function">zip</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> combinerFunction</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span>
    <span class="token keyword">let</span> counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    counter <span class="token operator">&lt;</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span>length<span class="token punctuation">,</span> right<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    counter<span class="token operator">++</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    results<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">combinerFunction</span><span class="token punctuation">(</span>left<span class="token punctuation">[</span>counter<span class="token punctuation">]</span><span class="token punctuation">,</span> right<span class="token punctuation">[</span>counter<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> results<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// JSON.stringify(Array.zip([1,2,3],[4,5,6], function(left, right) { return left + right })) === &#39;[5,7,9]&#39;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br></div></div><ol><li>forEach \u904D\u5386\u6570\u7EC4</li><li>map \u6295\u5F71\u6570\u7EC4 = new Array + forEach</li><li>filter \u8FC7\u6EE4\u6570\u7EC4 = forEach + if</li><li>(map + concatAll)/concatMap \u67E5\u8BE2\u6811</li><li>reduce \u7F29\u51CF\u6570\u7EC4 = filter + map</li><li>zip \u5408\u5E76\u6570\u7EC4</li><li>\u91CD\u8981\u7684\u662F\u8FD9\u4E9B\u65B9\u6CD5\u7684\u7EC4\u5408\u4F7F\u7528 <ol><li>\u5F3A\u5927\u7684\u67E5\u8BE2\u80FD\u529B\uFF1A<strong>\u4F60\u4E0D\u4EC5\u4EC5\u80FD\u591F\u4ECE\u6811\u4E2D\u67E5\u8BE2\u51FA\u6570\u7EC4\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u4ECE\u6570\u7EC4\u5F53\u4E2D\u67E5\u8BE2\u51FA\u6811</strong></li></ol></li></ol><h2 id="\u4EE5\u4E0B\u662F-rxjs-\u7684\u76F8\u5173\u90E8\u5206" tabindex="-1">\u4EE5\u4E0B\u662F RxJS \u7684\u76F8\u5173\u90E8\u5206</h2><h3 id="\u4F7F\u7528-observable" tabindex="-1">\u4F7F\u7528 Observable</h3><ul><li>Observable\uFF1A\u4E0E Event \u7C7B\u4F3C <ul><li>\u548C Event \u4E00\u6837\uFF0C\xA0<strong>Observable \u662F\u4E00\u4E2A\u7531\u6570\u636E\u4EA7\u751F\u8005<em>\u63A8\u9001</em>\u7ED9\u6570\u636E\u6D88\u8D39\u8005\u7684\u503C\u7684\u5E8F\u5217</strong></li><li>\u548C Event \u4E0D\u540C\uFF0C\xA0<strong>Observable \u53EF\u4EE5\u901A\u77E5\u76D1\u542C\u8005\uFF0C\u5B83\u5DF2\u7ECF\u5B8C\u6210</strong>\uFF0C\u5E76\u4E14\u4E0D\u518D\u53D1\u9001\u4EFB\u4F55\u6570\u636E</li></ul></li><li>\u8BA2\u9605\u4E00\u4E2A\u4E8B\u4EF6 <ul><li>\u8BA2\u9605\u4E00\u4E2A\u4E8B\u4EF6\u548C\u904D\u5386\u4E00\u4E2A\u6570\u7EC4\uFF0C\u672C\u8D28\u4E0A\u662F\u76F8\u540C\u7684\u64CD\u4F5C\u3002</li><li>\u552F\u4E00\u7684\u533A\u522B\u5728\u4E8E\uFF0C\xA0<strong>\u6570\u7EC4\u904D\u5386\u662F\u540C\u6B65\u7684\uFF0C\u800C\u4E14\u4E00\u5B9A\u4F1A\u7ED3\u675F\uFF0C\u800C\u4E8B\u4EF6\u7684\u904D\u5386\u662F\u5F02\u6B65\u7684\uFF0C\u540C\u65F6\u6C38\u8FDC\u4E0D\u4F1A\u7ED3\u675F</strong></li><li>\u5982\u679C\u6211\u4EEC\u628A\u6309\u94AE\u70B9\u51FB\u4E8B\u4EF6\u8F6C\u6362\u4E3A\u4E00\u4E2A Observable \u5BF9\u8C61\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u4F7F\u7528 forEach() \u6765\u904D\u5386\u8FD9\u4E2A\u4E8B\u4EF6</li></ul></li><li>take \u7ED3\u675F\u5E8F\u5217 <ul><li>\u57FA\u4E8E\u4E8B\u4EF6\u7684 Observable\xA0 \u6C38\u8FDC\u4E0D\u4F1A\u81EA\u5DF1\u7ED3\u675F\u3002 take() \u65B9\u6CD5\u4F1A\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u5E8F\u5217\uFF0C\u6B64\u5E8F\u5217\u5728\u56FA\u5B9A\u6570\u91CF\u7684\u5143\u7D20\u5230\u8FBE\u4E4B\u540E\uFF0C\u5C31\u4F1A\u7ED3\u675F</li><li>\u5F53\u4E00\u4E2A Observable \u5E8F\u5217\u7ED3\u675F\u65F6\uFF0C\u5B83\u4F1A\u81EA\u52A8\u53D6\u6D88\u6240\u6709\u7684\u76D1\u542C\u8005\u7684\u8BA2\u9605\u3002</li><li>take() \u5BF9\u4E8E\u76D1\u542C\u56FA\u5B9A\u6B21\u6570\u7684\u4E8B\u4EF6\u7136\u540E\u53D6\u6D88\u8BA2\u9605\u6765\u8BF4\uFF0C\u662F\u4E00\u4E2A\u975E\u5E38\u597D\u7528\u7684\u65B9\u6CD5</li></ul></li><li>takeUntil \u7ED3\u675F\u5E8F\u5217 <ul><li>takeUntil() \u65B9\u6CD5\u53EF\u4EE5\u7528\u4E8E \u53EF\u4EE5\u5728\u53E6\u4E00\u4E2A Event \u89E6\u53D1\u7684\u65F6\u5019\uFF0C\u7ED3\u675F\u6389\u4E00\u4E2A\u5E8F\u5217</li></ul></li><li>\u5C0F\u7ED3 <ul><li>\u4F7F\u7528 forEach() \u904D\u5386 Observables\u3002</li><li>\u4F7F\u7528 fromEvent() \u628A Events \u8F6C\u6362\u6210\u6C38\u4E0D\u7ED3\u675F\u7684 Observables\u3002</li><li>\u5728 Observable \u4E0A\u4F7F\u7528 take() \u548C takeUntil() \u521B\u5EFA\u4E00\u4E2A \xA0<strong>\u4F1A\u7ED3\u675F</strong>\xA0 \u7684\u5E8F\u5217\u3002</li></ul></li></ul><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">button</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> <span class="token function-variable function">handler</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u53D6\u6D88\u8BA2\u9605</span>
		button<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Button was clicked. Unsubscribing from event.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
	button<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">button</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> buttonClicks <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">fromEvent</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span> <span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u8BA2\u9605\u5BF9\u8C61\uFF0C\u8C03\u7528dispose\u65B9\u6CD5\u9500\u6BC1\u8BA2\u9605\u5BF9\u8C61\u76F8\u5F53\u4E8E\u4ECE\u5F02\u6B65for\u5FAA\u73AF\u4E2D break \u51FA\u53BB</span>
	<span class="token keyword">const</span> subscription <span class="token operator">=</span> buttonClicks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">clickEvent</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Button was clicked. Stopping Traversal.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		subscription<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4E0E\u4E0A\u9762\u7684\u6548\u679C\u76F8\u540C</span>
<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">button</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> buttonClicks <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">fromEvent</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span> <span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	buttonClicks<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">clickEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Button was clicked once. Stopping Traversal.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">button</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> buttonClicks <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">fromEvent</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span> <span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">const</span> newButtonClicks <span class="token operator">=</span> buttonClicks<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">clickEvent</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Button was clicked. Stopping Traversal.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">takeUntil</span><span class="token punctuation">(</span>buttonClicks<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="\u67E5\u8BE2-observable" tabindex="-1">\u67E5\u8BE2 Observable</h3><ul><li>\u5F02\u6B65\u6570\u636E\u6E90 <ul><li>\u4E8B\u4EF6 <ul><li>\u4E8B\u4EF6\u770B\u6210\u662F\u5B58\u50A8\u5728\u4E00\u4E2A\u5BF9\u8C61(\u4E8B\u4EF6\u5BF9\u8C61)\u91CC\u7684\u4E00\u7CFB\u5217 \u4E8B\u4EF6\u5904\u7406\u5668 \u7684 <strong>\u5217\u8868</strong></li><li>\u5982\u679C\u4E8B\u4EF6\u662F\u4E00\u4E2A\u5E8F\u5217\uFF0C\u90A3\u4E48\u5B83\u5C06\u662F\u4E00\u4E2A\u6C38\u8FDC\u4E0D\u4F1A\u81EA\u5DF1\u7ED3\u675F\u7684\u5305\u542B 0 \u5230\u65E0\u9650\u4E2A\u4E8B\u4EF6\u5BF9\u8C61\u7684\u5E8F\u5217</li><li>Observables \u8BA9\u6211\u4EEC\u53EF\u4EE5\u4E0D\u5FC5\u64CD\u5FC3\u5BF9\u4E8E Event \u7684\u8BA2\u9605</li><li>\u4F7F\u7528 fromEvent() \u628A Events \u8F6C\u6362\u6210\u6C38\u4E0D\u7ED3\u675F\u7684 Observables</li></ul></li><li>HTTP \u8BF7\u6C42 <ul><li>Observables \u4E5F\u53EF\u4EE5\u8BA9\u6211\u4EEC <ul><li>\u4E0D\u518D\u9700\u8981\u5BF9\u5E76\u884C\u4EFB\u52A1\u72B6\u6001\u8FDB\u884C\u8FFD\u8E2A</li><li>\u50CF\u5BF9\u540C\u6B65\u7A0B\u5E8F\u8FDB\u884C\u9519\u8BEF\u5904\u7406\u90A3\u6837\uFF0C\u5728\u5F02\u6B65\u7A0B\u5E8F\u4E2D \u4F7F\u7528\u76F8\u540C\u7684\u9519\u8BEF\u4F20\u5BFC\u8BED\u4E49</li></ul></li><li>\u5982\u679C\u56DE\u8C03 API \u662F\u4E00\u4E2A\u5E8F\u5217\uFF0C\u90A3\u4E48\u4ED6\u5C06\u662F\u4E00\u4E2A\u8FD4\u56DE\u4E00\u4E2A\u53D1\u9001\u5B8C\u5355\u4E2A\u5143\u7D20\u5C31\u81EA\u5DF1\u7ED3\u675F\u7684\u5E8F\u5217</li><li><strong>Observable.create() \u662F\u4E00\u4E2A\u53EF\u4EE5\u628A\u4EFB\u610F\u5F02\u6B65 API \u8F6C\u6362\u6210 Observable \u7684\u5DE5\u5177</strong></li></ul></li></ul></li><li>web \u5E94\u7528\u7684\u5DE5\u4F5C\u6D41\u7A0B\uFF1A\u7528\u6237\u64CD\u4F5C\u89E6\u53D1\u4E8B\u4EF6\uFF0C\u7136\u540E\u53D1\u9001 HTTP \u8BF7\u6C42\uFF0C\u6700\u540E\u5BFC\u81F4\u72B6\u6001\u53D8\u5316</li><li>\u4E00\u4E9B\u5DE5\u5177\u51FD\u6570 <ul><li>throttleTime(ms)\uFF1A\u7528\u4E8E\u8282\u6D41</li><li>distinctUntilChanged()\uFF1A\u7528\u4E8E\u8FC7\u6EE4\u6389\u8FDE\u7EED\u800C\u4E14\u91CD\u590D\u7684\u8F93\u5165\u503C</li></ul></li></ul><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// \u4E8B\u4EF6\u4F8B\u5B50\uFF1A\u9F20\u6807\u62D6\u52A8</span>
<span class="token comment">// sprite, spriteContainer \u662F\u4E24\u4E2A\u5B9A\u4E49\u597D\u7684 DOM \u5143\u7D20</span>
<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">sprite<span class="token punctuation">,</span> spriteContainer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// All of the mouse event sequences look like this:</span>
	<span class="token comment">// seq([ {pageX: 22, pageY: 3423, layerX: 14, layerY: 22} ,,, ])</span>
	<span class="token keyword">const</span> spriteMouseDowns <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">fromEvent</span><span class="token punctuation">(</span>sprite<span class="token punctuation">,</span> <span class="token string">&quot;mousedown&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		spriteContainerMouseMoves <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">fromEvent</span><span class="token punctuation">(</span>spriteContainer<span class="token punctuation">,</span> <span class="token string">&quot;mousemove&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		spriteContainerMouseUps <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">fromEvent</span><span class="token punctuation">(</span>spriteContainer<span class="token punctuation">,</span> <span class="token string">&quot;mouseup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token comment">// Create a sequence that looks like this:</span>
		<span class="token comment">// seq([ {pageX: 22, pageY:4080 },,,{pageX: 24, pageY: 4082},,, ])</span>
		spriteMouseDrags <span class="token operator">=</span>
			<span class="token comment">// For every mouse down event on the sprite...</span>
			spriteMouseDowns<span class="token punctuation">.</span>
				<span class="token function">concatMap</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">contactPoint</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// ...retrieve all the mouse move events on the sprite container...</span>
					<span class="token keyword">return</span> spriteContainerMouseMoves<span class="token punctuation">.</span>
						<span class="token comment">// ...until a mouse up event occurs.</span>
						<span class="token function">takeUntil</span><span class="token punctuation">(</span>spriteContainerMouseUps<span class="token punctuation">)</span><span class="token punctuation">.</span>
						<span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">movePoint</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							<span class="token keyword">return</span> <span class="token punctuation">{</span>
								<span class="token literal-property property">pageX</span><span class="token operator">:</span> movePoint<span class="token punctuation">.</span>pageX <span class="token operator">-</span> contactPoint<span class="token punctuation">.</span>layerX<span class="token punctuation">,</span>
								<span class="token literal-property property">pageY</span><span class="token operator">:</span> movePoint<span class="token punctuation">.</span>pageY <span class="token operator">-</span> contactPoint<span class="token punctuation">.</span>layerY
							<span class="token punctuation">}</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// For each mouse drag event, move the sprite to the absolute page position.</span>
	spriteMouseDrags<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">dragPoint</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		sprite<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> dragPoint<span class="token punctuation">.</span>pageX <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
		sprite<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> dragPoint<span class="token punctuation">.</span>pageY <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Observer.create() \u793A\u4F8B</span>
<span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token function-variable function">complete</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;The asynchronous operation has completed.&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> subscription <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">handler</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> subscribed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

	<span class="token comment">// \u6267\u884C\u5F02\u6B65\u64CD\u4F5C\uFF0C\u8C03\u7528handler\u4E2D\u7684\u5904\u7406\u51FD\u6570</span>

	<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> subscribed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token comment">// \u5B9A\u4E49\u8BA2\u9605\u5BF9\u8C61\u7684 dispose() \u65B9\u6CD5</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span>
<span class="token comment">// HTTP \u8BF7\u6C42\u793A\u4F8B</span>
<span class="token keyword">var</span> <span class="token function-variable function">getJSON</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">observer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">let</span> subscribed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

		$<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span><span class="token punctuation">{</span>
			<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>subscribed<span class="token punctuation">)</span> <span class="token punctuation">{</span> observer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> observer<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token parameter">ex</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>subscribed<span class="token punctuation">)</span> <span class="token punctuation">{</span> observer<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>

		<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> subscribed <span class="token operator">=</span> <span class="token boolean">false</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div>`,10),o=[e];function c(l,u,i,r,k,b){return a(),s("div",null,o)}var f=n(t,[["render",c]]);export{d as __pageData,f as default};
