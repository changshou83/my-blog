import{_ as n,c as s,o as a,a as p}from"./app.6117d463.js";const d='{"title":"\u8BFE\u7A0B\u5185\u5BB9","description":"","frontmatter":{},"headers":[{"level":2,"title":"JS \u9700\u8981\u5F02\u6B65","slug":"js-\u9700\u8981\u5F02\u6B65"},{"level":2,"title":"\u4E8B\u4EF6\u5FAA\u73AF(Event Loop)","slug":"\u4E8B\u4EF6\u5FAA\u73AF-event-loop"},{"level":3,"title":"\u53EF\u89C6\u5316\u63CF\u8FF0","slug":"\u53EF\u89C6\u5316\u63CF\u8FF0"},{"level":3,"title":"\u4E3A\u4EC0\u4E48\u88AB\u79F0\u4E3A\u4E8B\u4EF6\u5FAA\u73AF","slug":"\u4E3A\u4EC0\u4E48\u88AB\u79F0\u4E3A\u4E8B\u4EF6\u5FAA\u73AF"},{"level":2,"title":"\u5FAE\u4EFB\u52A1\u961F\u5217(Job Queue)","slug":"\u5FAE\u4EFB\u52A1\u961F\u5217-job-queue"},{"level":2,"title":"\u5F02\u6B65\u7F16\u7A0B","slug":"\u5F02\u6B65\u7F16\u7A0B"},{"level":3,"title":"Web API","slug":"web-api"},{"level":3,"title":"Promises","slug":"promises"},{"level":3,"title":"Async/Await","slug":"async-await"},{"level":2,"title":"\u5E76\u884C","slug":"\u5E76\u884C"},{"level":2,"title":"\u5E76\u53D1","slug":"\u5E76\u53D1"},{"level":3,"title":"Web Worker","slug":"web-worker"},{"level":3,"title":"child_processes","slug":"child-processes"}],"relativePath":"fe-basic/JS/asynchronous.md"}',t={},o=p(`<h1 id="\u8BFE\u7A0B\u5185\u5BB9" tabindex="-1">\u8BFE\u7A0B\u5185\u5BB9</h1><h2 id="js-\u9700\u8981\u5F02\u6B65" tabindex="-1">JS \u9700\u8981\u5F02\u6B65</h2><p>\u56E0\u4E3A JS \u662F\u5355\u7EBF\u7A0B\u7684\uFF0C\u6240\u4EE5\u5728\u9047\u5230\u8017\u65F6\u4EFB\u52A1\u65F6\u4E0D\u80FD\u50CF\u591A\u7EBF\u7A0B\u90A3\u6837\u5206\u51FA\u4E00\u4E2A\u5B50\u7EBF\u7A0B\u53BB\u6267\u884C\uFF0C\u56E0\u6B64\u4E3A\u4E86\u6A21\u62DF\u591A\u7EBF\u7A0B\u7684\u64CD\u4F5C\uFF0C\u5C06\u8017\u65F6\u4EFB\u52A1\u5EF6\u540E\u6267\u884C\u6765\u63D0\u5347\u8FD0\u884C\u6548\u7387\u3002</p><h2 id="\u4E8B\u4EF6\u5FAA\u73AF-event-loop" tabindex="-1">\u4E8B\u4EF6\u5FAA\u73AF(Event Loop)</h2><blockquote><p>JavaScript \u6709\u4E00\u4E2A\u57FA\u4E8E<strong>\u4E8B\u4EF6\u5FAA\u73AF</strong>\u7684\u5E76\u53D1\u6A21\u578B\uFF0C\u4E8B\u4EF6\u5FAA\u73AF\u8D1F\u8D23\u6267\u884C\u4EE3\u7801\u3001\u6536\u96C6\u548C\u5904\u7406\u4E8B\u4EF6\u4EE5\u53CA\u6267\u884C\u6D88\u606F\u961F\u5217\u4E2D\u7684\u5B50\u4EFB\u52A1\u3002</p></blockquote><h3 id="\u53EF\u89C6\u5316\u63CF\u8FF0" tabindex="-1">\u53EF\u89C6\u5316\u63CF\u8FF0</h3><p><img src="https://mdn.mozillademos.org/files/17124/The_Javascript_Runtime_Environment_Example.svg" alt=""> \u5148\u6267\u884C\u6808\u4E2D\u7684\uFF0C\u5728\u6267\u884C\u6D88\u606F\u961F\u5217\u4E2D\u7684</p><h3 id="\u4E3A\u4EC0\u4E48\u88AB\u79F0\u4E3A\u4E8B\u4EF6\u5FAA\u73AF" tabindex="-1">\u4E3A\u4EC0\u4E48\u88AB\u79F0\u4E3A\u4E8B\u4EF6\u5FAA\u73AF</h3><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">waitForMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> queue<span class="token punctuation">.</span><span class="token function">processNextMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E00\u6709\u6D88\u606F\u5C31\u6267\u884C</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="\u5FAE\u4EFB\u52A1\u961F\u5217-job-queue" tabindex="-1">\u5FAE\u4EFB\u52A1\u961F\u5217(Job Queue)</h2><p>Promise \u662F JS \u7684\u4E00\u90E8\u5206\uFF0CsetTimeout \u662F Web API\uFF0C\u90A3\u4E48\u5728\u4EFB\u52A1\u961F\u5217\u91CC\u600E\u4E48\u533A\u5206\u4E24\u8005\uFF1F \u7B54\u6848\u662F\u5C06\u524D\u8005\u653E\u5165\u4E00\u4E2A\u7279\u6B8A\u7684\u4F18\u5148\u7EA7\u66F4\u9AD8\u7684\u4EFB\u52A1\u961F\u5217\uFF0C\u8BE5\u961F\u5217\u79F0\u4E3A Job queue\u3002 \u6267\u884C\u4E00\u4E2A Web API \u4EFB\u52A1\u524D\u68C0\u67E5 Job queue \u662F\u5426\u4E3A\u7A7A\uFF0C\u5982\u679C\u4E0D\u4E3A\u7A7A\u5C31\u5C06\u961F\u5217\u4E2D\u7684\u4EFB\u52A1\u6E05\u7A7A\u518D\u6267\u884C Web API \u4EFB\u52A1</p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// ==&gt; Callback Queue</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;is the loneliest number&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;can be as bad as one&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>

<span class="token comment">// ==&gt; Job Queue</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// ==&gt; Stack</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;is a crowd&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// result</span>
<span class="token number">3</span> is a crowd
<span class="token number">2</span> hi
<span class="token number">1</span> is the loneliest number
<span class="token number">2</span> can be <span class="token keyword">as</span> bad <span class="token keyword">as</span> one
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="\u5F02\u6B65\u7F16\u7A0B" tabindex="-1">\u5F02\u6B65\u7F16\u7A0B</h2><h3 id="web-api" tabindex="-1">Web API</h3><div class="language-js line-numbers-mode"><pre><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5728 0ms \u4E4B\u540E\u5C06\u51FD\u6570\u9001\u5165\u6D88\u606F\u961F\u5217</span>
<span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="promises" tabindex="-1">Promises</h3><ul><li>\u7528\u4E8E\u8868\u793A\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\u7684\u6700\u7EC8\u5B8C\u6210\u53CA\u5176\u7ED3\u679C\u503C</li><li>\u4E3A\u4EC0\u4E48\u4F7F\u7528 Promises\uFF1F\u56E0\u4E3A\u53EF\u4EE5\u5C06 CB Hell \u53D8\u4E3A\u94FE\u5F0F\u8C03\u7528\uFF0C\u4EE3\u7801\u53EF\u7EF4\u62A4\u6027\u66F4\u5F3A <ul><li>\u80CC\u540E\u7684\u601D\u60F3\uFF1A\u5C06\u5F02\u6B65\u64CD\u4F5C\u89C6\u4E3A\u4EFB\u52A1\u6765\u6A21\u62DF\u64CD\u4F5C\u7CFB\u7EDF\u7684\u4EFB\u52A1\u8C03\u5EA6\u64CD\u4F5C</li></ul></li><li>\u601D\u60F3\u6269\u5C55\uFF1A\u662F\u5426\u6709\u5176\u5B83\u601D\u60F3\uFF1F\u9664\u4E86 Promise \u8FD8\u6709\u4EE5\u4E8B\u4EF6\u9A71\u52A8\u7684\u5F02\u6B65\u6A21\u578B<code>EventProxy</code>,\u5C06\u5D4C\u5957\u5173\u7CFB\u62C9\u5E73</li></ul><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// \u94FE\u5F0F\u8C03\u7528\u601D\u60F3</span>
<span class="token comment">// Promise\u4F7F\u7528</span>
<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span>log<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
  urls<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">url</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">results</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u771F\u6B63\u610F\u4E49\u4E0A\u7684all\uFF0CPromise.all === allResolve</span>
Promise<span class="token punctuation">.</span><span class="token function">allSettled</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u58F0\u660E\u5F0F\u7F16\u7A0B\u4F53\u9A8C</span>
<span class="token comment">// EventProxy\u793A\u610F</span>
<span class="token constant">A</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token constant">B</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token constant">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ===&gt; EventProxy</span>
<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token function">EventProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span><span class="token function">assgin</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token constant">B</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    proxy<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token constant">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// start</span>
<span class="token constant">A</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  proxy<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p><a href="./Appendix/MyPromise.html">MyPromise</a>\u7684\u5B9E\u73B0\u4E0E\u5C06 Callback \u8F6C\u5316\u4E3A Promise \u7684<a href="./Appendix/Promiseify.html">Promiseify</a>\u51FD\u6570</p><p>\u601D\u60F3\u6269\u5C55\uFF1A<code>\u5F02\u6B65 !== \u56DE\u8C03</code>(\u5199\u6CD5\u4E0A\u4E0D\u4E00\u6837\uFF0C\u601D\u60F3\u662F\u4E00\u6837\u7684)\uFF0C\u6BD4\u5982<code>async function</code></p><h3 id="async-await" tabindex="-1">Async/Await</h3><p>\u6B64\u8BED\u6CD5\u7684\u7684\u76EE\u7684\u662F\u7EE7\u7EED\u5728 Promise \u7684\u57FA\u7840\u4E0A\u4F18\u5316\u5F02\u6B65\u7F16\u7A0B\u4F53\u9A8C\uFF0C\u8FBE\u5230\u4E0E\u540C\u6B65\u7F16\u7A0B\u540C\u7EA7\u522B\u7684\u4F53\u9A8C\u3002</p><p>\u5176\u4E2D<code>async function</code>\u58F0\u660E\u4E00\u4E2A\u5F02\u6B65\u51FD\u6570\uFF0C<code>await</code>\u7B49\u5F85\u4E00\u4E2A Promise \u5BF9\u8C61\u7684\u5904\u7406\u7ED3\u679C\uFF0C\u5728\u7B49\u5F85\u671F\u95F4\u6682\u505C\u51FD\u6570\u76F4\u81F3\u6709\u8FD4\u56DE\u503C(\u7C7B\u4F3C\u751F\u6210\u5668\u91CC\u7684 yield)\uFF0C\u5982\u679C\u7B49\u5F85\u7684\u4E0D\u662F Promise \u5BF9\u8C61\u5219\u76F4\u63A5\u8FD4\u56DE\u503C\u672C\u8EAB\u3002</p><p>\u6269\u5C55\uFF1A<code>for await...of</code>\u521B\u5EFA\u4E00\u4E2A\u53EF\u904D\u5386\u5F02\u6B65\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5FAA\u73AF</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">playerStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result<span class="token operator">=</span><span class="token keyword">await</span> <span class="token function">movePlayer</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span><span class="token comment">// \u8FD4\u56DEPromise\u7684\u5904\u7406\u7ED3\u679C</span>
  <span class="token keyword">await</span> <span class="token function">movePlayer</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">handler</span> <span class="token operator">=</span> <span class="token parameter">url</span> <span class="token operator">=&gt;</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> rs<span class="token punctuation">.</span>j<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">urls</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> promises <span class="token operator">=</span> urls<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">url</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="\u5E76\u884C" tabindex="-1">\u5E76\u884C</h2><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">promiseify</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">a</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">promiseify</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">b</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">promiseify</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">c</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">promiseify</span><span class="token punctuation">(</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">parallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> promises <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>output1<span class="token punctuation">,</span> output2<span class="token punctuation">,</span> output3<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">parallel done: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>output1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>output2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>output3<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> promises <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> output <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">race done: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>output<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">sequence</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> output1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> output2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> output3 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">sequence done: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>output1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>output2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>output3<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">parallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">sequence</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h2 id="\u5E76\u53D1" tabindex="-1">\u5E76\u53D1</h2><h3 id="web-worker" tabindex="-1">Web Worker</h3><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">const</span> worker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token string">&#39;worker.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
worker<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="child-processes" tabindex="-1">child_processes</h3><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ls <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;ls&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;-lh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/usr&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ls<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token parameter">data</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stdout: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ls<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token parameter">data</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stderr: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ls<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token parameter">code</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">child process exited with code </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h1 id="links" tabindex="-1">Links</h1><blockquote><p><a href="https://www.bilibili.com/video/BV16q4y1o7EG" target="_blank" rel="noopener noreferrer">b \u7AD9\u89C6\u9891</a> p115 - p124 10 <a href="https://www.yuque.com/changshou/fvzohd/eb9xyf" target="_blank" rel="noopener noreferrer">\u5F02\u6B65\u68B3\u7406\u7B14\u8BB0</a></p></blockquote>`,34),e=[o];function c(u,l,i,k,r,b){return a(),s("div",null,e)}var g=n(t,[["render",c]]);export{d as __pageData,g as default};
