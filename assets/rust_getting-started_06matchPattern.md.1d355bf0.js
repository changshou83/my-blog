import{_ as n,c as s,o as a,b as p}from"./app.eb4f4a2c.js";const d='{"title":"\u679A\u4E3E","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u4E0E\u7ED3\u6784\u4F53","slug":"\u4E0E\u7ED3\u6784\u4F53"},{"level":2,"title":"option \u679A\u4E3E","slug":"option-\u679A\u4E3E"}],"relativePath":"rust/getting-started/06matchPattern.md"}',t={},e=p(`<h1 id="\u679A\u4E3E" tabindex="-1">\u679A\u4E3E</h1><h2 id="\u4E0E\u7ED3\u6784\u4F53" tabindex="-1">\u4E0E\u7ED3\u6784\u4F53</h2><p>\u76F8\u5BF9\u4E8E\u7ED3\u6784\u4F53\u6765\u8BF4\uFF0C\u679A\u4E3E\u66F4\u7B80\u6D01\uFF0C\u5E76\u4E14\u53EF\u4EE5\u5C06\u6570\u636E\u76F4\u63A5\u653E\u5165\u6210\u5458\u4E2D(\u7ED3\u6784\u4F53\u53EA\u80FD\u5B9A\u4E49\u7C7B\u578B)</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">enum</span> <span class="token type-definition class-name">IpAddrKind</span> <span class="token punctuation">{</span>
	<span class="token constant">V4</span><span class="token punctuation">,</span>
	<span class="token constant">V6</span>
<span class="token punctuation">}</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">IpAddr1</span> <span class="token punctuation">{</span>
	<span class="token class-name">Kind</span><span class="token punctuation">:</span> <span class="token class-name">IpAddrKind</span><span class="token punctuation">,</span>
	address<span class="token punctuation">:</span> <span class="token class-name">String</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4E0A\u9762\u4E0E\u4E0B\u9762\u6548\u679C\u4E00\u6837</span>
<span class="token keyword">enum</span> <span class="token type-definition class-name">IpAddr2</span> <span class="token punctuation">{</span>
	<span class="token constant">V4</span><span class="token punctuation">(</span><span class="token keyword">u8</span><span class="token punctuation">,</span><span class="token keyword">u8</span><span class="token punctuation">,</span><span class="token keyword">u8</span><span class="token punctuation">,</span><span class="token keyword">u8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token constant">V6</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> home1 <span class="token operator">=</span> <span class="token class-name">IpAddr1</span> <span class="token punctuation">{</span>
		kind<span class="token punctuation">:</span> <span class="token class-name">IpAddrKind</span><span class="token punctuation">::</span><span class="token constant">V4</span><span class="token punctuation">,</span>
		address<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">let</span> home2 <span class="token operator">=</span> <span class="token class-name">IpAddr</span><span class="token punctuation">::</span><span class="token constant">V4</span><span class="token punctuation">(</span><span class="token number">127</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ul><li>\u679A\u4E3E\u4E5F\u53EF\u4EE5\u50CF\u7ED3\u6784\u4F53\u4E00\u6837\u5E26\u65B9\u6CD5</li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">enum</span> <span class="token type-definition class-name">Message</span> <span class="token punctuation">{</span>
	<span class="token class-name">Write</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">impl</span> <span class="token class-name">Message</span> <span class="token punctuation">{</span>
	<span class="token keyword">fn</span> <span class="token function-definition function">call</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token class-name">Message</span><span class="token punctuation">::</span><span class="token class-name">Write</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	message<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="option-\u679A\u4E3E" tabindex="-1">option \u679A\u4E3E</h2><ul><li>rust \u4E2D\u6CA1\u6709 null\uFF0C\u4F46\u6709 null(\u7A7A\u503C)\u7684\u6982\u5FF5\uFF1A<code>Option&lt;T&gt;</code></li><li>option \u679A\u4E3E\u5728\u6807\u51C6\u5E93\u4E2D\u7684\u5B9A\u4E49</li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">enum</span> <span class="token type-definition class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
	<span class="token class-name">Some</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token comment">// \u975E\u7A7A\u503C</span>
	<span class="token class-name">None</span><span class="token punctuation">,</span>    <span class="token comment">// \u7A7A\u503C</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>\u4F7F\u7528 option \u679A\u4E3E <ul><li>option \u5728\u9884\u52A0\u8F7D\u4E2D\uFF0C\u6240\u4EE5\u4E0D\u7528\u663E\u793A\u5F15\u7528</li></ul></li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> some_number <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// \u5B9A\u4E49None\u65F6\u9700\u8981\u6307\u5B9A\u7C7B\u578B\uFF0C\u56E0\u4E3A\u7F16\u8BD1\u5668\u4E0D\u80FD\u6839\u636ENone\u6765\u8FDB\u884C\u7C7B\u578B\u63A8\u65AD</span>
	<span class="token keyword">let</span> absent_number<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token class-name">None</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>\u4E0E null \u7684\u4F18\u52BF 1.\u4E0D\u518D\u62C5\u5FC3\u4F1A\u9519\u8BEF\u7684\u5047\u8BBE\u4E00\u4E2A\u975E\u7A7A\u503C\uFF0C\u4F1A\u8BA9\u4F60\u5BF9\u4EE3\u7801\u66F4\u52A0\u6709\u4FE1\u5FC3 2.\u9650\u5236\u7A7A\u503C\u7684\u6CDB\u6EE5\u4EE5\u589E\u52A0 Rust \u4EE3\u7801\u7684\u5B89\u5168\u6027 <ul><li>\u89E3\u91CA <ul><li>\u53EA\u6709\u4F7F\u7528\u4E86 option \u7684\u503C\u9700\u8981\u8003\u8651\u662F\u5426\u4E3A\u7A7A\uFF0C\u5176\u4ED6\u503C\u4E0D\u9700\u8981\u8003\u8651</li><li>\u5728\u8FDB\u884C T \u548C<code>Option&lt;T&gt;</code>\u7684\u8FD0\u7B97\u524D\u9700\u8981\u5C06<code>Option&lt;T&gt;</code>\u8F6C\u6362\u4E3A T\uFF0C\u5728\u8F6C\u6362\u7684\u65F6\u5019\u4F1A\u6355\u83B7\u5230\u5E38\u89C1\u95EE\u9898</li><li>\u53E6\u4E00\u4E2A\u89C6\u89D2</li><li>\u4E3A\u4E86\u62E5\u6709\u4E00\u4E2A\u53EF\u80FD\u4E3A\u7A7A\u7684\u503C\uFF0C\u4F60\u5FC5\u987B\u8981\u663E\u5F0F\u7684\u5C06\u5176\u653E\u5165\u5BF9\u5E94\u7C7B\u578B\u7684<code>Option&lt;T&gt;</code>\u4E2D\u3002</li><li>\u63A5\u7740\uFF0C\u5F53\u4F7F\u7528\u8FD9\u4E2A\u503C\u65F6\uFF0C\u5FC5\u987B\u660E\u786E\u7684\u5904\u7406\u503C\u4E3A\u7A7A\u7684\u60C5\u51B5\u3002</li></ul></li></ul></li><li>\u793A\u4F8B</li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> x<span class="token punctuation">:</span> <span class="token keyword">i8</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> y<span class="token punctuation">:</span><span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token keyword">i8</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">let</span> sum <span class="token operator">=</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span><span class="token comment">// \u4F1A\u62A5\u9519\uFF0C\u56E0\u4E3AOption&lt;i8&gt;\u4E0Ei8\u662F\u4E0D\u540C\u7684\u6570\u636E\u7C7B\u578B</span>
	<span class="token keyword">let</span> sum <span class="token operator">=</span> x <span class="token operator">+</span> y<span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u8FD9\u6837\u5C31\u53EF\u4EE5</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h1 id="match-\u63A7\u5236\u6D41" tabindex="-1">match \u63A7\u5236\u6D41</h1><ul><li>match \u5141\u8BB8\u6211\u4EEC\u5C06\u4E00\u4E2A\u503C\u4E0E\u4E00\u7CFB\u5217\u7684\u6A21\u5F0F\u76F8\u6BD4\u8F83\uFF0C\u5E76\u6839\u636E\u76F8\u5339\u914D\u7684\u6A21\u5F0F\u6267\u884C\u76F8\u5E94\u4EE3\u7801\u3002</li><li>\u6A21\u5F0F\u53EF\u7531\u5B57\u9762\u503C\u3001\u53D8\u91CF\u3001\u901A\u914D\u7B26\u548C\u8BB8\u591A\u5176\u4ED6\u5185\u5BB9\u6784\u6210</li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">enum</span> <span class="token type-definition class-name">UsState</span> <span class="token punctuation">{</span>
 <span class="token class-name">Alabama</span><span class="token punctuation">,</span>
 <span class="token class-name">Alaska</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">enum</span> <span class="token type-definition class-name">Coin</span> <span class="token punctuation">{</span>
 <span class="token class-name">Penny</span><span class="token punctuation">,</span>
 <span class="token class-name">Quarter</span><span class="token punctuation">(</span><span class="token class-name">UsState</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">plus_one</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span><span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">match</span> x <span class="token punctuation">{</span>
		<span class="token class-name">Some</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token class-name">None</span> <span class="token operator">=&gt;</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> coin <span class="token operator">=</span> <span class="token class-name">Coin</span><span class="token punctuation">::</span><span class="token class-name">Quarter</span><span class="token punctuation">(</span><span class="token class-name">UsState</span><span class="token punctuation">::</span><span class="token class-name">Alaska</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">match</span> coin <span class="token punctuation">{</span>
		<span class="token class-name">Coin</span><span class="token punctuation">::</span><span class="token class-name">Penny</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span>
		<span class="token class-name">Coin</span><span class="token punctuation">::</span><span class="token class-name">Quarter</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token number">25</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">let</span> five <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> six <span class="token operator">=</span> <span class="token function">plus_one</span><span class="token punctuation">(</span>five<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> none <span class="token operator">=</span> <span class="token function">plus_one</span><span class="token punctuation">(</span><span class="token class-name">None</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><ul><li>match \u5FC5\u987B\u7A77\u4E3E\u6240\u6709\u53EF\u80FD\uFF0C\u62FF option \u4E3E\u4F8B\uFF0C\u5982\u679C\u4F60\u5FD8\u8BB0\u5904\u7406 none\uFF0C\u4ED6\u4F1A\u63D0\u9192\u4F60\u6CA1\u5904\u7406</li><li>\u901A\u914D\u7B26\u4E0E<code>_</code>\uFF0C\u6709\u98CE\u9669\uFF0C\u6BD4\u5982 None \u88AB\u5FFD\u7565</li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> dice_roll <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>
	<span class="token keyword">match</span> dice_roll <span class="token punctuation">{</span>
		<span class="token number">3</span> <span class="token operator">=&gt;</span> <span class="token function">add_fancy_hat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token number">7</span> <span class="token operator">=&gt;</span> <span class="token function">remove_fancy_hat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token comment">// other =&gt; move_player(other),// \u901A\u914D\uFF0C\u6DB5\u76D6\u6240\u6709\u5176\u4ED6\u53EF\u80FD</span>
		_ <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// \u5FFD\u7565\u6240\u6709\u5176\u4ED6\u53EF\u80FD</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h1 id="if-let-\u63A7\u5236\u6D41" tabindex="-1">if let \u63A7\u5236\u6D41</h1><ul><li>match \u7684\u8BED\u6CD5\u7CD6\uFF1A\u5904\u7406\u53EA\u5339\u914D\u4E00\u4E2A\u6A21\u5F0F\u7684\u503C\u800C\u5FFD\u7565\u5176\u4ED6\u6A21\u5F0F\u7684\u60C5\u51B5</li><li>\u4E0E match <ul><li>\u597D\u5904:\u4F7F\u7528 if let \u610F\u5473\u7740\u7F16\u5199\u66F4\u5C11\u4EE3\u7801\uFF0C\u66F4\u5C11\u7684\u7F29\u8FDB\u548C\u66F4\u5C11\u7684\u6837\u677F\u4EE3\u7801</li><li>\u574F\u5904:\u4F1A\u5931\u53BB match \u5F3A\u5236\u8981\u6C42\u7684\u7A77\u5C3D\u6027\u68C0\u67E5</li><li>\u9009\u62E9:\u4F9D\u8D56\u7279\u5B9A\u7684\u73AF\u5883\u4EE5\u53CA\u589E\u52A0\u7B80\u6D01\u5EA6\u548C\u5931\u53BB\u7A77\u5C3D\u6027\u68C0\u67E5\u7684\u6743\u8861\u53D6\u820D</li></ul></li></ul><div class="language-rust line-numbers-mode"><pre><code><span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> <span class="token keyword">mut</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> coin <span class="token operator">=</span> <span class="token class-name">Coin</span><span class="token punctuation">::</span><span class="token class-name">Quarter</span><span class="token punctuation">(</span><span class="token class-name">UsState</span><span class="token punctuation">::</span><span class="token class-name">Alaska</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// match coin {</span>
 	<span class="token comment">//     Coin::Quarter(state) =&gt; println!(&quot;State quarter from {:?}!&quot;, state),</span>
 	<span class="token comment">//     _ =&gt; count += 1,</span>
 	<span class="token comment">// }</span>
 	<span class="token comment">// \u4E0B\u9762\u7684\u4EE3\u7801\u4E0E\u4E0A\u9762\u6548\u679C\u4E00\u6837</span>
 	<span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Coin</span><span class="token punctuation">::</span><span class="token class-name">Quarter</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=</span> coin <span class="token punctuation">{</span>
 		<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;State quarter from {:?}!&quot;</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>
 	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
 		count <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
 	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,21),o=[e];function c(l,u,i,r,k,m){return a(),s("div",null,o)}var f=n(t,[["render",c]]);export{d as __pageData,f as default};
